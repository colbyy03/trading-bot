[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "trading-bot"
version = "0.1.0"
description = "Production-ready Polygon.io powered trading bot with backtesting and live alerting"
authors = [{name = "Your Company", email = "dev@example.com"}]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
dependencies = [
    "pandas>=2.1",
    "numpy>=1.26",
    "pyarrow>=15.0",
    "polars>=0.20",
    "polygon-api-client>=1.15.4",
    "typer[all]>=0.12",
    "pydantic>=2.7",
    "pyyaml>=6.0",
    "structlog>=24.1",
    "matplotlib>=3.8",
    "pandas-market-calendars>=4.3",
    "scikit-learn>=1.4",
    "requests>=2.31"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-cov>=4.1",
    "mypy>=1.9",
    "ruff>=0.3",
    "types-requests",
    "types-pyyaml"
]

[project.scripts]
tb = "trading_bot.cli:app"

[tool.hatch.build]
# Ensure editable installs expose the package directory on sys.path instead of
# the repository root. This avoids situations where the generated `.pth` file
# points at a stale checkout location, which manifested as `ModuleNotFoundError`
# for `trading_bot` when running the CLI after an editable install.
dev-mode-dirs = ["trading_bot"]

[tool.hatch.build.targets.wheel]
packages = ["trading_bot"]

[tool.pytest.ini_options]
addopts = "-ra"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.11"
packages = ["trading_bot"]
ignore_missing_imports = true
strict = false

[tool.ruff]
line-length = 100
select = ["E","F","I","B","UP","N","S","C4","RUF"]
ignore = ["S101"]

[tool.ruff.lint.isort]
known-first-party = ["trading_bot"]

[tool.typer]
color = true
